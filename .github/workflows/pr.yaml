# Copyright 2023 The Janus IDP Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: PR Test operator

on:
  pull_request:
    branches: 
    - main
    - rhdh-1.[0-9]+
    - 1.[0-9]+.x

jobs:
  check-changes:
    # check if the change for this PR necessitates a rebuild of containers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: check-changes
        # check changes in this commit for regex include and exclude matches; pipe to an env var
        # note regexes are different for the PR check than for *-container-build.yaml
        run: |
          # don't fail if nothing returned by grep
          set +e 
          CHANGES="$(git diff --name-only HEAD~1 | \
          grep -E "workflows/pr.yaml|Makefile|bundle/|config/|go.mod|go.sum|.+\.go" | \
          grep -v -E "/.rhdh/")";
          echo "Changed files for this commit:"
          echo "=============================="
          echo "$CHANGES"
          echo "=============================="
          {
            echo 'CHANGES<<EOF'
            echo $CHANGES
            echo EOF
          } >> "$GITHUB_ENV"

  pr-validate:
    name: PR Validate
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      # gosec needs a "build" stage so connect it to the lint step which we always do
      - name: build
        run: make lint

      - name: test
        # run this stage only if there are changes that match the includes and not the excludes
        if: ${{ env.CHANGES != '' }}
        run: make test

      - name: Run Gosec Security Scanner
        run: make gosec

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: gosec.sarif
